plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
	accessWidenerPath = file("src/main/resources/thunderhack.accesswidener")
}

repositories {
	maven {
		name = "meteor-maven-snapshots"
		url = "https://maven.meteordev.org/snapshots"
	}
	maven {
		name = "jitpack.io"
		url = "https://jitpack.io"
	}
	maven {
		name = 'swt-repo'
		url = "https://maven-eclipse.github.io/maven"
	}
	maven {
		name = "meteor-maven"
		url = "https://maven.meteordev.org/releases"
	}
	repositories {
		maven {
			name = 'Ladysnake Mods'
			url = 'https://maven.ladysnake.org/releases'
			content {
				includeGroup 'io.github.ladysnake'
				includeGroup 'org.ladysnake'
				includeGroupByRegex 'dev\\.onyxstudios.*'
			}
		}
	}
	maven {
		url "https://cursemaven.com"
	}
	mavenCentral()
	jcenter()
}

configurations {
	libImpl
	modImpl
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modApi "curse.maven:in-game-account-switcher-232676:4967040"

	modImpl("org.ladysnake:satin:${project.satin_version}")

	libImpl("meteordevelopment:orbit:${project.orbit_version}")
	modCompileOnly "meteordevelopment:baritone:1.20.4-SNAPSHOT"

	configurations.libImpl.dependencies.each {
		implementation(it)
	}
	configurations.modImpl.dependencies.each {
		modImplementation(it)
		include(it)
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
	from {
		configurations.libImpl.collect { it.isDirectory() ? it : zipTree(it) }
	}
	duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}
